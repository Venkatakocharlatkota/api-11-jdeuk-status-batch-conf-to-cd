<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="Ordererrorreport" doc:id="13fdcc01-fe74-4c41-bd3c-e9cc169e5172" >
		<logger level="INFO" doc:name="Logger" doc:id="a514d463-c71a-4c3e-937a-0abdfc988604" message="+++Entering into Order Error status+++" />
		<ee:transform doc:name="Order Status Data fields sending to CD JSON Data" doc:id="628fb98a-79da-4e1b-8043-a66e538eff6a">
			<ee:message >
				<ee:set-payload ><![CDATA[payload.StatusResponse.*Status]]></ee:set-payload>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="buisObj"><![CDATA["ErrorReport"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<set-variable value="#[payload.SequenceNumber[0]]" doc:name="request_id" doc:id="1ae5048f-58f3-4448-8479-b8d63e227598" variableName="request_id"/>
		<choice doc:name="Choice" doc:id="37bdf20e-81e9-4bda-8cd0-7faeb862ae2b" >
			<when expression="#[((payload.RecordProcessed contains 'E')  and (payload.MessageResponse contains ('CAS'))) or &#10;((payload.RecordProcessed contains 'E')  and (payload.MessageResponse contains ('STP'))) or &#10;((payload.RecordProcessed contains 'E')  and (payload.MessageResponse contains ('ADD'))) or &#10;((payload.RecordProcessed contains 'E')  and (payload.MessageResponse contains ('SOE'))) or &#10;((payload.RecordProcessed contains 'E')  and (payload.MessageResponse contains ('PSH')))]">
				<logger level="INFO" doc:name="E1 to CD for RecordProcessed 'E' and MessageResponse CAS,STP,PSH,ADD,SOE" doc:id="f48f9f11-dab5-4db6-9579-aea78faaf5db" message="+++Error report received from E1 that contains as a Message Reponse of E1 to CD for RecordProcessed 'E' and MessageResponse  of CAS,STP,ADD,SOE +++"/>
				<set-variable value="#[payload.CDUIDHeader[0]]" doc:name="external_id" doc:id="225e26b3-7e5d-4c16-b93a-97124b56e1fe" variableName="external_id" />
				<set-variable value="#[payload.CDOrderNumber[0]]" doc:name="order_id" doc:id="ceb79f4a-0aa3-4305-922b-105d99d9264e" variableName="order_id" />
				<ee:transform doc:name="Order-Level Error report" doc:id="d746f0ab-917a-4aec-82fd-8cf90dc79689">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
import * from dw::Runtime
output application/json
var vErrorsA3= payload filter ($.RecordProcessed =='E') and ( $.MessageResponse == 'ADD' or $.MessageResponse == 'PSH'  or $.MessageResponse == 'CAS' or $.MessageResponse == 'STP' or $.MessageResponse == 'SOE' )

---
 {
        "latest_message_identifier": vars.messageIdentifier,
        "referenced_message_id": vErrorsA3[0].SequenceNumber,
        "external_id":if (isEmpty(vErrorsA3[0].CDUIDHeader)) fail ("ERROR : Mandatory Field: 'Order Id' cannot be empty.")
              else (vErrorsA3[0].CDUIDHeader),
        
  "errors": vErrorsA3 map
  {
  "code": $.MessageResponse default "" ,
  "detail": "The validation of line item failed due to " ++ $.MessageResponseDesc default '' ,
  } distinctBy $.code
}
 ]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="external_id" ><![CDATA[payload.CDUIDHeader[0]]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="51428f75-b32a-4625-9907-9d801bc430c4" message="#[payload]"/>
			</when>
			<when expression="#[(payload.RecordProcessed contains 'E') or (((payload.HoldCode contains ('A3'))) and (payload.MessageResponse contains (&quot;HLD&quot;)))]">
				<logger level="INFO" doc:name="E1 to CD for RecordProcessed 'E' and MessageResponse BOM,'CAN',LOC ,HEQ,MOQ ,BNF and 'MAR' and ('E' and 'A1')  or ('Y' and 'A3') " doc:id="bc6b81c5-1eb2-4f1d-b4bf-890eb75dba94" message="+++E1 to CD for MessageResponse BOM,'CAN','PSH' and 'MAR'+++" />
				<set-variable value="#[payload.CDUIDHeader[0]]" doc:name="external_id" doc:id="faf3ad02-5982-4310-b6e4-66d1eb9db445" variableName="external_id" />
				<set-variable value="#[payload.CDOrderNumber[0]]" doc:name="order_id" doc:id="d52067bd-db5b-4e63-8320-35282361dcc5" variableName="order_id" />
				<ee:transform doc:name="Line-item report" doc:id="2edfca2c-6471-441f-aec0-732c799c5df6" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::Runtime
output application/json
//var vErrorsA3= payload filter ($.MessageResponse == 'BOM' or $.MessageResponse == 'CAN' or $.MessageResponse == 'PSH' or $.MessageResponse == 'MAR' or $.MessageResponse == 'STP' ) or (($.RecordProcessed == 'Y') and ($.MessageResponse == 'HLD'))
var vErrorsA3= payload filter  ($.RecordProcessed == 'E') or (($.HoldCode == 'A3') and ($.MessageResponse == 'HLD'))
---
{
    "latest_message_identifier": vars.messageIdentifier,
    "referenced_message_id": vErrorsA3[0].SequenceNumber,
    "external_id":if (isEmpty(vErrorsA3[0].CDUIDHeader)) fail ("ERROR : Mandatory Field: 'Order Id' cannot be empty.")
              else (vErrorsA3[0].CDUIDHeader),
       
    "errors": vErrorsA3 map {
    "code": $.MessageResponse default "",
    "detail": "The validation of line item failed due to " ++ $.MessageResponseDesc ++ " and " ++ "Order Line Number:" ++ $.OrderLineNo  ,
    ("source": 
           {
         "pointer" : "order_items: " ++ $.CDUIDDetail 
           }) 
   }

}
 ]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="Code" ><![CDATA[payload[0].MessageResponse]]></ee:set-variable>
						<ee:set-variable variableName="external_id" ><![CDATA[payload.CDUIDHeader[0]]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="38dfa285-828a-4554-8b60-6ea0435d3975" message="#[payload]" />
			</when>
			
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="25c7c40d-e262-4c30-aba9-1d5e6d0d559e" message="+++No Order errors repor from E1 for process into CD +++"/>
				<set-variable value="#[payload.CDUIDHeader[0]]" doc:name="external_id" doc:id="464eebd1-4df2-453b-b002-a5cd04c4a61d" variableName="external_id" />
				<set-variable value="#[payload.CDOrderNumber[0]]" doc:name="order_id" doc:id="e3314637-d69a-4183-b78c-481fe754fd0c" variableName="order_id" />
				<ee:transform doc:name="Transform Message" doc:id="41db3916-1b4e-462b-bd33-cfbaa45f74f8" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::Runtime
output application/json
var vErrorsA3= payload filter (($.RecordProcessed == 'Y') and ($.MessageResponse != 'HLD'))
---

    {
        "latest_message_identifier": vars.messageIdentifier,
        "referenced_message_id": vErrorsA3[0].SequenceNumber,
        "external_id":if (isEmpty(vErrorsA3[0].CDUIDHeader)) fail ("ERROR : Mandatory Field: 'Order Id' cannot be empty.")
              else (vErrorsA3[0].CDUIDHeader),
        
 "errors": []

    }]]></ee:set-payload>
					</ee:message>
					<ee:variables >
					</ee:variables>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="de335771-7c7b-4855-95a1-ab94cad46494" message="#[payload]" />
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="722c6e34-31ab-46ed-8cfe-b5e850dbd0fa" message="+++Order Error status sent for processing to api-5+++ external_id - #[vars.external_id] ,request_id - #[vars.order_id]"/>
		<logger level="INFO" doc:name="Logger" doc:id="09e2cd5c-acd3-40c4-9f2c-e40359b24398" message="+++ All Order reponse of Error-Line numbers  of error-respones data are successfully submitted.  +++ Sequence_Number- #[vars.request_id]" />
		<flow-ref doc:name="Request Flow" doc:id="95df9683-f54a-4a37-9719-06207f56de38" name="RequestFlow" />
		<logger level="INFO" doc:name="Logger" doc:id="ed9724ca-c78c-407c-a8c7-a51aea023f16" message="+++ Transformed Order error response Master submitted successfully into CD +++" />
		<logger level="INFO" doc:name="Logger" doc:id="3eca3b5a-f7ea-4f50-8fbd-9580f835445e" message="+++ Order error report Data successfully submitted to API-5 :: request_id - #[vars.order_id],External_id - #[vars.external_id] ,Sequence_Number- #[vars.request_id] successfully submitted ++++++" />
	</flow>
</mule>
